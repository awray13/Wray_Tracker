@using Wray_Tracker.Helper;
@model Wray_Tracker.Models.Ticket


<section class="content">
    <div class="container">
        <div class="row">
            <div class="col mt-4">
                <div class="card">
                    <div class="mx-3 mt-n2 elevation-2 bg-gradient-navy text-white">
                        <h5 class="mx-3 mt-2 mb-0">Edit Ticket #@Model.Id</h5>
                        @if (User.IsInRole("Admin") || User.IsInRole("Manager"))
                        {
                            <p class="text-sm mx-sm-4">@Html.ActionLink("Back to List", "Index", null, new { @class = "text-white" })</p>
                        }
                    </div>
                    <div class="card-body">
                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()

                            <div class="form-horizontal">
                                <hr />
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                @Html.HiddenFor(model => model.Id)
                                @Html.HiddenFor(model => model.Created)
                                @Html.HiddenFor(model => model.ProjectId)
                                @Html.HiddenFor(model => model.TicketTypeId)
                                @Html.HiddenFor(model => model.SubmitterId)

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                @if (!User.IsInRole("Submitter"))
                                {
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.TicketStatusId, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.DropDownList("TicketStatusId", null, htmlAttributes: new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.TicketStatusId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    @Html.HiddenFor(model => model.TicketStatusId)
                                }

                                <div class="form-group">
                                    @Html.LabelFor(model => model.TicketPriorityId, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownList("TicketPriorityId", null, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.TicketPriorityId, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.TicketTypeId, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownList("TicketTypeId", null, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.TicketTypeId, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                @if (!User.IsInRole("Submitter") && !User.IsInRole("Developer"))
                                {
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.DeveloperId, "Developer", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.DropDownList("DeveloperId", null, "- Select Developer -", htmlAttributes: new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.DeveloperId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    @Html.HiddenFor(model => model.DeveloperId)
                                }
                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <input type="submit" value="Save" class="btn btn-default bg-gradient-orange text-white" />
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

