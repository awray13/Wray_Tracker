@using Wray_Tracker.Models;
@using Wray_Tracker.Helper;
@model IEnumerable<TicketHistory>

@{
    ViewBag.Title = "Index";
    
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <thead>
        <tr>
            @*<th>
                @Html.DisplayNameFor(model => model.Ticket.SubmitterId)
            </th>*@
            <th>
                @Html.DisplayName("Changed By")
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Property)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OldValue)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.NewValue)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ChangedOn)
            </th>
            <th></th>
        </tr>
    </thead>

@foreach (var item in Model) {
<tbody>
    <tr>
        @*<td>
                @Html.DisplayFor(modelItem => item.Ticket.SubmitterId)
            </td>*@
        <td>
            @Html.DisplayFor(modelItem => item.User.FullName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Property)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.OldValue)
        </td>
        <td>
            @* At the moment I would need to feed the DisplayData method an instance of a TicketHistory *@
            @HistoryDisplayHelper.DisplayData(item)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ChangedOn)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
            @Html.ActionLink("Details", "Details", new { id = item.Id }) |
            @Html.ActionLink("Delete", "Delete", new { id = item.Id })
        </td>
    </tr>
</tbody>
}

</table>
